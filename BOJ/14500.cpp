// 14500번_테트로미노
#include <iostream>
#include <algorithm>
#define MAX 500
using namespace std;

// 5가지 테트로미노를 배치하는 모든 경우
int tetromino[19][4][2] = {
    {{0,0}, {1,0}, {2,0}, {3,0}}, // I
    {{0,0}, {0,1}, {0,2}, {0,3}},

    {{0,0}, {0,1}, {1,0}, {1,1}}, // O

    {{0,0}, {1,0}, {2,0}, {2,1}}, // L
    {{0,0}, {0,1}, {0,2}, {1,0}},
    {{0,0}, {0,1}, {1,1}, {2,1}},
    {{1,0}, {1,1}, {1,2}, {0,2}},

    {{0,1}, {1,1}, {2,1}, {2,0}}, // L(대칭)
    {{0,0}, {1,0}, {1,1}, {1,2}},
    {{0,0}, {0,1}, {1,0}, {2,0}},
    {{0,0}, {0,1}, {0,2}, {1,2}},

    {{0,0}, {1,0}, {1,1}, {2,1}}, // S
    {{1,0}, {1,1}, {0,1}, {0,2}},
    
    {{0,1}, {1,0}, {1,1}, {2,0}}, // S(대칭)
    {{0,0}, {0,1}, {1,1}, {1,2}},

    {{0,0}, {0,1}, {0,2}, {1,1}}, // T
    {{1,0}, {0,1}, {1,1}, {2,1}},
    {{0,1}, {1,0}, {1,1}, {1,2}},
    {{0,0}, {1,0}, {1,1}, {2,0}}
};
int paper[MAX][MAX];
int n, m, ans = 0;

void Dispose(int row, int col){
    int sum, rRow, rCol;
    for(int i=0; i<19; ++i){ // 19개 테트로미노
        sum = 0;
        for(int j=0; j<4; ++j){ // 각 테트로미노는 4개 좌표로 구성
            // 상대 위치 구하기
            rRow = row + tetromino[i][j][0];
            rCol = col + tetromino[i][j][1];

            // 테트로미노의 각 블럭이 종이를 벗어나는지 확인
            if(rRow >= n || rCol >= m){
                sum = 0;
                break;
            }
            sum += paper[rRow][rCol];
        }
        ans = max(ans, sum);
    }
}

int main(){
    cin >> n >> m;
    for(int i=0; i<n; ++i){
        for(int j=0; j<m; ++j){
            cin >> paper[i][j];
        }
    }
    for(int i=0; i<n; ++i){
        for(int j=0; j<m; ++j){
            Dispose(i, j);
        }
    }
    cout << ans << "\n";
    return 0;
}