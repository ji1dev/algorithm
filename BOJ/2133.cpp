// 2133번_타일 채우기
#include <iostream>
using namespace std;
int main(){
    int n, dp[31]={0, };
    // dp[i] = 3xi 벽을 2x1, 1x2 타일로 채우는 경우의 수
    dp[0] = 1;
    dp[1] = 0;
    dp[2] = 3;
    cin >> n;

    // 벽의 크기가 홀수이면 타일을 채울 수 없음 (i=4부터 가로 2칸씩 증가)
    for(int i=4; i<=n; i+=2){
        // i-2번째 타일 패턴에 3x2 패턴을 붙임
        dp[i] = dp[i-2]*3;

        // j번째 (j=i-4, i-6, ..., 0) 타일 패턴에 3x(i-j) 패턴을 붙임
        // 앞서 구한 패턴과 중복되지 않는 3x(i-j)번째의 고유 패턴 2개만 가능함
        for(int j=i-4; j>=0; j-=2){
            dp[i] += dp[j]*2;
        }
    }
    // i.e., dp[8] = dp[6]뒤에 dp[2]를 붙이는 경우
    //             + dp[4]뒤에 dp[4]를 붙이는 경우 -> dp[4]뒤에 dp[4]의 고유 패턴
    //             + dp[2]뒤에 dp[6]을 붙이는 경우 -> dp[2]뒤에 dp[6]의 고유 패턴
    //             + dp[0]뒤에 dp[8]을 붙이는 경우 -> dp[0]뒤에 dp[8]의 고유 패턴
    //             = dp[6]*3 + dp[4]*2 + dp[2]*2 + 2
    cout << dp[n];
    return 0;
}